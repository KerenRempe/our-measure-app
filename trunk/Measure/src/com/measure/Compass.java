package com.measure;import android.app.Activity;import android.content.Context;import android.content.Intent;import android.graphics.Typeface;import android.hardware.Sensor;import android.hardware.SensorEvent;import android.hardware.SensorEventListener;import android.hardware.SensorManager;import android.os.Bundle;import android.view.View;import android.view.Window;import android.view.WindowManager;import android.view.View.OnClickListener;import android.view.animation.Animation;import android.view.animation.RotateAnimation;import android.widget.Button;import android.widget.ImageView;import android.widget.TextView;public class Compass extends Activity {	private ImageView imageView;	private SensorManager manager;	private SensorListener listener = new SensorListener();	private TextView title;    @Override    public void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);            	requestWindowFeature(Window.FEATURE_NO_TITLE);		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,				WindowManager.LayoutParams.FLAG_FULLSCREEN);                setContentView(R.layout.compass);                imageView = (ImageView) this.findViewById(R.id.imageView);        imageView.setKeepScreenOn(true);        manager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);                title=(TextView)findViewById(R.id.title);		Typeface fontFace = Typeface.createFromAsset(getAssets(),				"fonts/LithosPro-Regular.ttf");		title.setTypeface(fontFace);		title.setTypeface(fontFace);		title.setText("COMPASS");						Button home = (Button)findViewById(R.id.bt_home);		home.setOnClickListener(new OnClickListener() {						@Override			public void onClick(View v) {				Intent intent = new Intent();				intent.setClass(Compass.this, Main.class);				Compass.this.finish();				Compass.this.startActivity(intent);							}		});    }	@Override	protected void onResume() {		Sensor sensor = manager.getDefaultSensor(Sensor.TYPE_ORIENTATION);		manager.registerListener(listener, sensor, SensorManager.SENSOR_DELAY_GAME);		super.onResume();	}	@Override	protected void onPause() {		manager.unregisterListener(listener);		super.onPause();	}		private final class SensorListener implements SensorEventListener{		private float predegree = 0;		public void onSensorChanged(SensorEvent event) {			float degree = event.values[0];//����˷���ֵ 90			RotateAnimation animation = new RotateAnimation(predegree, -degree, 					Animation.RELATIVE_TO_SELF, 0.5f, Animation.RELATIVE_TO_SELF, 0.5f);			animation.setDuration(200);			imageView.startAnimation(animation);			predegree = -degree;		}		public void onAccuracyChanged(Sensor sensor, int accuracy) {		}	}        }