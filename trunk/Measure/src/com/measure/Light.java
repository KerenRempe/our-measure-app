package com.measure;import android.app.Activity;import android.content.Context;import android.content.Intent;import android.graphics.Typeface;import android.graphics.drawable.BitmapDrawable;import android.hardware.Sensor;import android.hardware.SensorEvent;import android.hardware.SensorEventListener;import android.hardware.SensorManager;import android.os.Bundle;import android.util.Log;import android.view.Gravity;import android.view.KeyEvent;import android.view.LayoutInflater;import android.view.View;import android.view.View.OnClickListener;import android.view.Window;import android.view.WindowManager;import android.view.View.OnKeyListener;import android.view.animation.Animation;import android.view.animation.RotateAnimation;import android.widget.Button;import android.widget.ImageView;import android.widget.PopupWindow;import android.widget.TextView;public class Light extends Activity {	private SensorManager manager;	private SensorListener listener = new SensorListener();	private View root;	private PopupWindow popupWindow;	private TextView textView,title;	private Button image;    @Override    public void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);            	requestWindowFeature(Window.FEATURE_NO_TITLE);		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,				WindowManager.LayoutParams.FLAG_FULLSCREEN);                setContentView(R.layout.light);        image=(Button)findViewById(R.id.button2);        title=(TextView)findViewById(R.id.title);        Typeface fontFace = Typeface.createFromAsset(getAssets(),				"fonts/LithosPro-Regular.ttf");		title.setTypeface(fontFace);		title.setText("BRIGHTNESS");        manager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);                LayoutInflater li = (LayoutInflater) getBaseContext().getSystemService(				LAYOUT_INFLATER_SERVICE);		root = (View) li.inflate(R.layout.gradienter_popup, null);		textView = (TextView) root.findViewById(R.id.textView1);                image.setOnClickListener(new OnClickListener() {						@Override			public void onClick(View v) {								if (popupWindow != null) {					popupWindow.dismiss();					popupWindow = null;				}				if (popupWindow == null) {					popupWindow = new PopupWindow(root, 300, 200);					backButton();					popupWindow							.setAnimationStyle(R.style.mypopwindow_anim_style);					popupWindow.setFocusable(true);					popupWindow.showAtLocation(root, Gravity.TOP, 0, 0);												}															}		});                Button home = (Button)findViewById(R.id.bt_home);		home.setOnClickListener(new OnClickListener() {						@Override			public void onClick(View v) {				Intent intent = new Intent();				intent.setClass(Light.this, Main.class);				Light.this.finish();				Light.this.startActivity(intent);							}		});    }	@Override	protected void onResume() {		Sensor sensor = manager.getDefaultSensor(Sensor.TYPE_LIGHT);		manager.registerListener(listener, sensor, SensorManager.SENSOR_DELAY_GAME);		super.onResume();	}	@Override	protected void onPause() {		manager.unregisterListener(listener);		super.onPause();	}		private final class SensorListener implements SensorEventListener{		public void onSensorChanged(SensorEvent event) {			//textView.setText(event.values.length+"     "+event.values[0]);			Log.i("LIGHT", event.values[0]+"");			double light = event.values[0];			if(light <=10.0){				image.setBackgroundResource(R.drawable.light0);					textView.setText("看不见了");			}else if(light <=40){				image.setBackgroundResource(R.drawable.light1);					textView.setText("太暗啦");			}else if(light <=160){				image.setBackgroundResource(R.drawable.light2);					textView.setText("微亮");			}else if(light <=225){				image.setBackgroundResource(R.drawable.light3);					textView.setText("普通");			}else if(light <=320){				image.setBackgroundResource(R.drawable.light4);					textView.setText("适宜阅读");			}else if(light <=640){				image.setBackgroundResource(R.drawable.light5);					textView.setText("明亮");			}else if(light <=1280){				image.setBackgroundResource(R.drawable.light6);					textView.setText("耀眼");			}else if(light <=10240){				image.setBackgroundResource(R.drawable.light7);					textView.setText("亮瞎啦~");			}else{				image.setBackgroundResource(R.drawable.light8);				}											}		public void onAccuracyChanged(Sensor sensor, int accuracy) {		}	}	public void backButton(){    	popupWindow.setBackgroundDrawable(new BitmapDrawable());    	    	popupWindow.setFocusable(true);    	popupWindow.setFocusable(true);    			 root.setOnKeyListener(new OnKeyListener()		 {		 	@Override		 	public boolean onKey(View v, int keyCode, KeyEvent event)		 	{		 		// TODO Auto-generated method stub		 		if (keyCode == KeyEvent.KEYCODE_BACK)		 		{		 			Log.v("keyCode", "/" + keyCode);		  			if(popupWindow != null) {		  				popupWindow.dismiss();		  				popupWindow = null;		 			} 		 		}		 		 return false; 		 	}		 });	    }    }